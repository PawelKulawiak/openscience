) %>%
ggplot(aes(x = Niveau, y = n, fill = Niveau)) +
geom_col() +
geom_text(aes(label = Label), hjust = -0.1, size = 4) +
scale_fill_manual(
values = c(                                # Parbauswahl
"weit überdurchschnittlich" = "#9B8BA8", # Purpur
"überdurchschnittlich" = "#6B9AC4",      # Blau
"durchschnittlich" = "#A8C686",          # Grün
"unterdurchschnittlich" = "#E6B854",     # Gelb
"weit unterdurchschnittlich" = "#C85450" # Rot
)
) +
coord_flip() +
labs(
subtitle = 'Leistungen im Mathematik-Test "Mathes-0"',
title = "Balkendiagramm mit Anzahl und Prozentzahl",
x = NULL,
y = "Anzahl der Kinder"
) +
theme_minimal() +
theme(legend.position = "none") +
ylim(0, max(count(DATEN, Niveau)$n) * 1.15)
WAFFELDIAGRAMM /
BALKENDIAGRAMM +
plot_layout(heights = c(0.7, 0.3))
n_classes <- 3
n_students <- 87
# Create snake pattern: A B C C B A A B C ...
klasse_vec <- rep(NA, n_students)
current_class <- 1
direction <- 1
for (i in 1:n_students) {
klasse_vec[i] <- LETTERS[current_class]
current_class <- current_class + direction
if (current_class > n_classes) {
current_class <- n_classes
direction <- -1
} else if (current_class < 1) {
current_class <- 1
direction <- 1
}
}
klasse_vec
cbind(DATEN, klassen_vec)
cbind(DATEN, klasse_vec)
rep(c(1, 2, 3), length.out = ceiling(20/2))
rep(c("A", "B", "c"), length.out = ceiling(nrow(DATEN)/2))
rep(c("A", "B", "c"), length.out = ceiling(nrow(DATEN)/2)),
rep(c("A", "B", "c"), length.out = ceiling(nrow(DATEN)/2))
rep(c("C", "B", "A"), length.out = ceiling(nrow(DATEN)/2))
Klasse <-
c(
rep(c("A", "B", "c"), length.out = ceiling(nrow(DATEN)/2)),
rep(c("C", "B", "A"), length.out = ceiling(nrow(DATEN)/2))
)
rbind(Daten, Klasse)
rbind(DATEN, Klasse)
cbind(DATEN, Klasse)
Klasse <-
c(
rep(c("A", "B", "c"), length.out = ceiling(nrow(DATEN)/2)),
rep(c("C", "B", "A"), length.out = ceiling((nrow(DATEN)/2)-1))
)
cbind(DATEN, Klasse)
cbind(DATEN, Klasse) %>%
gt() %>%
data_color(
columns = Niveau,
fn = function(x) {
case_when(                                      # Farbauswahl
x == "weit überdurchschnittlich" ~ "#9B8BA8", # Purpur
x == "überdurchschnittlich" ~ "#6B9AC4",      # Blau
x == "durchschnittlich" ~ "#A8C686",          # Grün
x == "unterdurchschnittlich" ~ "#E6B854",     # Gelb
x == "weit unterdurchschnittlich" ~ "#C85450" # Rot
)
}
) %>%
tab_header(
title = "Testung vor Einschulung 2025/2026",
subtitle = 'Leistungen im Mathematik-Test "Mathes-0" in der KiTa bzw. Vorschule'
)
Klasse <-
c(
rep(c("A", "B", "c"), length.out = ceiling(nrow(DATEN)/2)),
rep(c("C", "B", "A"), length.out = ceiling((nrow(DATEN)/2)-1)) %>% rev()
)
cbind(DATEN, Klasse) %>%
gt() %>%
data_color(
columns = Niveau,
fn = function(x) {
case_when(                                      # Farbauswahl
x == "weit überdurchschnittlich" ~ "#9B8BA8", # Purpur
x == "überdurchschnittlich" ~ "#6B9AC4",      # Blau
x == "durchschnittlich" ~ "#A8C686",          # Grün
x == "unterdurchschnittlich" ~ "#E6B854",     # Gelb
x == "weit unterdurchschnittlich" ~ "#C85450" # Rot
)
}
) %>%
tab_header(
title = "Testung vor Einschulung 2025/2026",
subtitle = 'Leistungen im Mathematik-Test "Mathes-0" in der KiTa bzw. Vorschule'
)
Klasse <-
c(
rep(c("A", "B", "c"), length.out = ceiling(nrow(DATEN)/2)),
rep(c("A", "B", "c"), length.out = ceiling((nrow(DATEN)/2)-1)) %>% rev()
)
cbind(DATEN, Klasse) %>%
gt() %>%
data_color(
columns = Niveau,
fn = function(x) {
case_when(                                      # Farbauswahl
x == "weit überdurchschnittlich" ~ "#9B8BA8", # Purpur
x == "überdurchschnittlich" ~ "#6B9AC4",      # Blau
x == "durchschnittlich" ~ "#A8C686",          # Grün
x == "unterdurchschnittlich" ~ "#E6B854",     # Gelb
x == "weit unterdurchschnittlich" ~ "#C85450" # Rot
)
}
) %>%
tab_header(
title = "Testung vor Einschulung 2025/2026",
subtitle = 'Leistungen im Mathematik-Test "Mathes-0" in der KiTa bzw. Vorschule'
)
BALKENDIAGRAMM_A <-
cbind(DATEN, Klasse) %>%
filter(Klasse == "A") %>%
count(Niveau) %>%
mutate(
Prozent = n / sum(n) * 100,
Label = paste0(n, " (", round(Prozent, 1), "%)")
) %>%
ggplot(aes(x = Niveau, y = n, fill = Niveau)) +
geom_col() +
geom_text(aes(label = Label), hjust = -0.1, size = 4) +
scale_fill_manual(
values = c(                                # Parbauswahl
"weit überdurchschnittlich" = "#9B8BA8", # Purpur
"überdurchschnittlich" = "#6B9AC4",      # Blau
"durchschnittlich" = "#A8C686",          # Grün
"unterdurchschnittlich" = "#E6B854",     # Gelb
"weit unterdurchschnittlich" = "#C85450" # Rot
)
) +
coord_flip() +
labs(
subtitle = 'Leistungen im Mathematik-Test "Mathes-0"',
title = "Balkendiagramm mit Anzahl und Prozentzahl",
x = NULL,
y = "Anzahl der Kinder"
) +
theme_minimal() +
theme(legend.position = "none") +
ylim(0, max(count(DATEN, Niveau)$n) * 1.15)
WAFFELDIAGRAMM_A
WAFFELDIAGRAMM_A <-
cbind(DATEN, Klasse) %>%
filter(Klasse = "A") %>%
waffle_iron(aes_d(group = Niveau)) %>%
ggplot(aes(x, y, fill = group)) +
geom_waffle() +
scale_fill_manual(
values = c(                                # Parbauswahl
"weit überdurchschnittlich" = "#9B8BA8", # Purpur
"überdurchschnittlich" = "#6B9AC4",      # Blau
"durchschnittlich" = "#A8C686",          # Grün
"unterdurchschnittlich" = "#E6B854",     # Gelb
"weit unterdurchschnittlich" = "#C85450" # Rot
)
) +
coord_equal() +
scale_x_reverse() +
theme_void() +
labs(
title = 'Waffel-Diagramm (Leistungen im Mathematik-Test "Mathes-0")',
subtitle = "Jedes Quadrat repräsentiert ein Kind"
) +
theme(
legend.title = element_blank(),
legend.position = "none"
)
WAFFELDIAGRAMM_A <-
cbind(DATEN, Klasse) %>%
filter(Klasse == "A") %>%
waffle_iron(aes_d(group = Niveau)) %>%
ggplot(aes(x, y, fill = group)) +
geom_waffle() +
scale_fill_manual(
values = c(                                # Parbauswahl
"weit überdurchschnittlich" = "#9B8BA8", # Purpur
"überdurchschnittlich" = "#6B9AC4",      # Blau
"durchschnittlich" = "#A8C686",          # Grün
"unterdurchschnittlich" = "#E6B854",     # Gelb
"weit unterdurchschnittlich" = "#C85450" # Rot
)
) +
coord_equal() +
scale_x_reverse() +
theme_void() +
labs(
title = 'Waffel-Diagramm (Leistungen im Mathematik-Test "Mathes-0")',
subtitle = "Jedes Quadrat repräsentiert ein Kind"
) +
theme(
legend.title = element_blank(),
legend.position = "none"
)
WAFFELDIAGRAMM_A
WAFFELDIAGRAMM_A <-
cbind(DATEN, Klasse) %>%
filter(Klasse == "A") %>%
waffle_iron(aes_d(group = Niveau)) %>%
ggplot(aes(x, y, fill = group)) +
geom_waffle() +
scale_fill_manual(
values = c(                                # Parbauswahl
"weit überdurchschnittlich" = "#9B8BA8", # Purpur
"überdurchschnittlich" = "#6B9AC4",      # Blau
"durchschnittlich" = "#A8C686",          # Grün
"unterdurchschnittlich" = "#E6B854",     # Gelb
"weit unterdurchschnittlich" = "#C85450" # Rot
)
) +
coord_equal() +
scale_x_reverse() +
theme_void() +
labs(
title = "Klasse A",
subtitle = "Jedes Quadrat repräsentiert ein Kind"
) +
theme(
legend.title = element_blank(),
legend.position = "none"
)
WAFFELDIAGRAMM_A
WAFFELDIAGRAMM_A <-
cbind(DATEN, Klasse) %>%
filter(Klasse == "A") %>%
waffle_iron(aes_d(group = Niveau)) %>%
ggplot(aes(x, y, fill = group)) +
geom_waffle() +
scale_fill_manual(
values = c(                                # Parbauswahl
"weit überdurchschnittlich" = "#9B8BA8", # Purpur
"überdurchschnittlich" = "#6B9AC4",      # Blau
"durchschnittlich" = "#A8C686",          # Grün
"unterdurchschnittlich" = "#E6B854",     # Gelb
"weit unterdurchschnittlich" = "#C85450" # Rot
)
) +
coord_equal() +
scale_x_reverse() +
theme_void() +
labs(subtitle = "Klasse A") +
theme(
legend.title = element_blank(),
legend.position = "none"
)
WAFFELDIAGRAMM_A
WAFFELDIAGRAMM_A + WAFFELDIAGRAMM_B
WAFFELDIAGRAMM_B <-
cbind(DATEN, Klasse) %>%
filter(Klasse == "B") %>%
waffle_iron(aes_d(group = Niveau)) %>%
ggplot(aes(x, y, fill = group)) +
geom_waffle() +
scale_fill_manual(
values = c(                                # Parbauswahl
"weit überdurchschnittlich" = "#9B8BA8", # Purpur
"überdurchschnittlich" = "#6B9AC4",      # Blau
"durchschnittlich" = "#A8C686",          # Grün
"unterdurchschnittlich" = "#E6B854",     # Gelb
"weit unterdurchschnittlich" = "#C85450" # Rot
)
) +
coord_equal() +
scale_x_reverse() +
theme_void() +
labs(subtitle = "Klasse B") +
theme(
legend.title = element_blank(),
legend.position = "none"
)
WAFFELDIAGRAMM_A + WAFFELDIAGRAMM_B
WAFFELDIAGRAMM_A <-
cbind(DATEN, Klasse) %>%
filter(Klasse == "A") %>%
waffle_iron(aes_d(group = Niveau)) %>%
ggplot(aes(x, y, fill = group)) +
geom_waffle() +
scale_fill_manual(
values = c(                                # Parbauswahl
"weit überdurchschnittlich" = "#9B8BA8", # Purpur
"überdurchschnittlich" = "#6B9AC4",      # Blau
"durchschnittlich" = "#A8C686",          # Grün
"unterdurchschnittlich" = "#E6B854",     # Gelb
"weit unterdurchschnittlich" = "#C85450" # Rot
)
) +
coord_equal() +
scale_x_reverse() +
theme_void() +
labs(subtitle = "Klasse A") +
theme(
legend.title = element_blank(),
legend.position = "none"
)
WAFFELDIAGRAMM_B <-
cbind(DATEN, Klasse) %>%
filter(Klasse == "B") %>%
waffle_iron(aes_d(group = Niveau)) %>%
ggplot(aes(x, y, fill = group)) +
geom_waffle() +
scale_fill_manual(
values = c(                                # Parbauswahl
"weit überdurchschnittlich" = "#9B8BA8", # Purpur
"überdurchschnittlich" = "#6B9AC4",      # Blau
"durchschnittlich" = "#A8C686",          # Grün
"unterdurchschnittlich" = "#E6B854",     # Gelb
"weit unterdurchschnittlich" = "#C85450" # Rot
)
) +
coord_equal() +
scale_x_reverse() +
theme_void() +
labs(subtitle = "Klasse B") +
theme(
legend.title = element_blank(),
legend.position = "none"
)
WAFFELDIAGRAMM_C <-
cbind(DATEN, Klasse) %>%
filter(Klasse == "C") %>%
waffle_iron(aes_d(group = Niveau)) %>%
ggplot(aes(x, y, fill = group)) +
geom_waffle() +
scale_fill_manual(
values = c(                                # Parbauswahl
"weit überdurchschnittlich" = "#9B8BA8", # Purpur
"überdurchschnittlich" = "#6B9AC4",      # Blau
"durchschnittlich" = "#A8C686",          # Grün
"unterdurchschnittlich" = "#E6B854",     # Gelb
"weit unterdurchschnittlich" = "#C85450" # Rot
)
) +
coord_equal() +
scale_x_reverse() +
theme_void() +
labs(subtitle = "Klasse C") +
theme(
legend.title = element_blank(),
legend.position = "none"
)
WAFFELDIAGRAMM_C <-
cbind(DATEN, Klasse) %>%
filter(Klasse == "C") %>%
waffle_iron(aes_d(group = Niveau)) %>%
ggplot(aes(x, y, fill = group)) +
geom_waffle() +
scale_fill_manual(
values = c(                                # Parbauswahl
"weit überdurchschnittlich" = "#9B8BA8", # Purpur
"überdurchschnittlich" = "#6B9AC4",      # Blau
"durchschnittlich" = "#A8C686",          # Grün
"unterdurchschnittlich" = "#E6B854",     # Gelb
"weit unterdurchschnittlich" = "#C85450" # Rot
)
) +
coord_equal() +
scale_x_reverse() +
theme_void() +
labs(subtitle = "Klasse C") +
theme(
legend.title = element_blank(),
legend.position = "none"
)
cbind(DATEN, Klasse) %>%
filter(Klasse == "C")
cbind(DATEN, Klasse) %>%
filter(Klasse == "C")
View(DATEN)
WAFFELDIAGRAMM_C <-
cbind(DATEN, Klasse) %>%
filter(Klasse == "C") %>%
waffle_iron(aes_d(group = Niveau)) %>%
ggplot(aes(x, y, fill = group)) +
geom_waffle() +
scale_fill_manual(
values = c(                                # Parbauswahl
"weit überdurchschnittlich" = "#9B8BA8", # Purpur
"überdurchschnittlich" = "#6B9AC4",      # Blau
"durchschnittlich" = "#A8C686",          # Grün
"unterdurchschnittlich" = "#E6B854",     # Gelb
"weit unterdurchschnittlich" = "#C85450" # Rot
)
) +
coord_equal() +
scale_x_reverse() +
theme_void() +
labs(subtitle = "Klasse C") +
theme(
legend.title = element_blank(),
legend.position = "none"
)
cbind(DATEN, Klasse)
# Algorithmus für die Klassenzuordnung
Klasse <-
c(
rep(c("A", "B", "C"), length.out = ceiling(nrow(DATEN)/2)),
rep(c("A", "B", "C"), length.out = ceiling((nrow(DATEN)/2)-1)) %>% rev()
)
WAFFELDIAGRAMM_A <-
cbind(DATEN, Klasse) %>%
filter(Klasse == "A") %>%
waffle_iron(aes_d(group = Niveau)) %>%
ggplot(aes(x, y, fill = group)) +
geom_waffle() +
scale_fill_manual(
values = c(                                # Parbauswahl
"weit überdurchschnittlich" = "#9B8BA8", # Purpur
"überdurchschnittlich" = "#6B9AC4",      # Blau
"durchschnittlich" = "#A8C686",          # Grün
"unterdurchschnittlich" = "#E6B854",     # Gelb
"weit unterdurchschnittlich" = "#C85450" # Rot
)
) +
coord_equal() +
scale_x_reverse() +
theme_void() +
labs(subtitle = "Klasse A") +
theme(
legend.title = element_blank(),
legend.position = "none"
)
WAFFELDIAGRAMM_B <-
cbind(DATEN, Klasse) %>%
filter(Klasse == "B") %>%
waffle_iron(aes_d(group = Niveau)) %>%
ggplot(aes(x, y, fill = group)) +
geom_waffle() +
scale_fill_manual(
values = c(                                # Parbauswahl
"weit überdurchschnittlich" = "#9B8BA8", # Purpur
"überdurchschnittlich" = "#6B9AC4",      # Blau
"durchschnittlich" = "#A8C686",          # Grün
"unterdurchschnittlich" = "#E6B854",     # Gelb
"weit unterdurchschnittlich" = "#C85450" # Rot
)
) +
coord_equal() +
scale_x_reverse() +
theme_void() +
labs(subtitle = "Klasse B") +
theme(
legend.title = element_blank(),
legend.position = "none"
)
WAFFELDIAGRAMM_C <-
cbind(DATEN, Klasse) %>%
filter(Klasse == "C") %>%
waffle_iron(aes_d(group = Niveau)) %>%
ggplot(aes(x, y, fill = group)) +
geom_waffle() +
scale_fill_manual(
values = c(                                # Parbauswahl
"weit überdurchschnittlich" = "#9B8BA8", # Purpur
"überdurchschnittlich" = "#6B9AC4",      # Blau
"durchschnittlich" = "#A8C686",          # Grün
"unterdurchschnittlich" = "#E6B854",     # Gelb
"weit unterdurchschnittlich" = "#C85450" # Rot
)
) +
coord_equal() +
scale_x_reverse() +
theme_void() +
labs(subtitle = "Klasse C") +
theme(
legend.title = element_blank(),
legend.position = "none"
)
WAFFELDIAGRAMM_A + WAFFELDIAGRAMM_B + BALKENDIAGRAMM_C
WAFFELDIAGRAMM_A + WAFFELDIAGRAMM_B + BALKENDIAGRAMM_C
WAFFELDIAGRAMM_C <-
cbind(DATEN, Klasse) %>%
filter(Klasse == "C") %>%
waffle_iron(aes_d(group = Niveau)) %>%
ggplot(aes(x, y, fill = group)) +
geom_waffle() +
scale_fill_manual(
values = c(                                # Parbauswahl
"weit überdurchschnittlich" = "#9B8BA8", # Purpur
"überdurchschnittlich" = "#6B9AC4",      # Blau
"durchschnittlich" = "#A8C686",          # Grün
"unterdurchschnittlich" = "#E6B854",     # Gelb
"weit unterdurchschnittlich" = "#C85450" # Rot
)
) +
coord_equal() +
scale_x_reverse() +
theme_void() +
labs(subtitle = "Klasse C") +
theme(
legend.title = element_blank(),
legend.position = "none"
)
WAFFELDIAGRAMM_A + WAFFELDIAGRAMM_B + BALKENDIAGRAMM_C
WAFFELDIAGRAMM_A + WAFFELDIAGRAMM_B + WAFFELDIAGRAMM_C
